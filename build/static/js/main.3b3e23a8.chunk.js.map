{"version":3,"sources":["components/Header.js","components/TodoList.js","components/TodoSection.js","components/AddTodoSection.js","components/Main.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Nav","styled","div","Title","h3","Header","data-testid","className","CardItem","TodoText","p","TrashIcon","span","EditIcon","TodoList","todo","deleteTodo","editTodo","completeTodo","id","style","textDecoration","isChecked","onClick","marginRight","content","icon","TDS","CTButton","button","TodoSection","todos","clearTodos","handleClearTodos","a","window","navigator","vibrate","confirm","length","map","key","FormSection","Heading","h5","Input","input","Button","props","isButtonActive","AddTodoSection","addTodo","todoInputText","isEditingTodo","saveEdit","useState","todoText","setTodoText","setIsButtonActive","btnDisabled","btnText","useEffect","onSubmit","e","preventDefault","type","placeholder","value","onChange","text","target","disabled","Main","Info","Name","Pratham","Footer","library","add","faPencilAlt","App","setTodos","setTodoInputText","setIsEditingTodo","todoBeingEdited","setTodoBeingEdited","document","title","localStorage","getItem","JSON","parse","todoId","newTodos","filter","setItem","stringify","newTodo","Math","random","toUpperCase","slice","removeItem","editedTodoId","todoToEdit","find","newTodoContent","indexOfEditedTodo","indexOf","completedTodo","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3b3e23a8.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\nconst Nav = styled.div`\n    background-color:background-color: #000000;\n    background-image: linear-gradient(147deg, #000000 0%, #04619f 74%);\n    // opacity:0.6; \n    color: white;\n    text-align: center;\n    width:100%;\n    padding-block: 1rem;\n    \n`;\n\nconst Title = styled.h3`\n    opacity: 0.9;\n    margin-left: 165%;\n    width: 8em;\n    text-align: center;\n    \n    \n`\n\nconst Header = () => {\n    return(\n        <header data-testid=\"navbar\">\n            <Nav>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-3\">\n                            <Title data-testid=\"logo-text\">Todo-App</Title>\n                        </div>\n                        <div className=\"col-9\">\n\n                        </div>\n                    </div>\n                </div>\n            </Nav>\n        </header>\n    )\n};\n\nexport default Header","import React from 'react'\nimport styled from 'styled-components'\nimport { Trash2, Square, CheckSquare } from 'react-feather';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst CardItem = styled.div`\n    background: #eee;\n   padding: 10px 10px;\n   margin-bottom: 10px;\n   border-radius: 4px\n`;\n\nconst TodoText = styled.p`\n    font-weight: 500\n    margin-bottom: 0;\n    color: black;\n    &:hover,\n    &:active {color: gray}\n`;\n\nconst TrashIcon = styled.span`\n    color: #f1a9a0;\n    cursor: pointer;\n    transition: 0.3s color;\n    margin: 0 2px;\n    &:hover,\n    &:active {color: #cf000f} \n`;\n\nconst EditIcon = styled.span`\n    margin: 0 2px;\n    color: #22313f;\n    cursor: pointer;\n    transition: 0.3s color;\n    &:hover,\n    &:active {color: #1f3a93} \n`;\n\nconst TodoList = ({todo, deleteTodo, editTodo, id, completeTodo}) => {\n    const handleClick = () => {\n        deleteTodo(todo.id)\n    }\n    \n    return (\n        \n        <CardItem data-testid='todo-list'>\n            <div className=\"row\">\n                <div className=\"col-8\">\n                    <TodoText data-testid='todo-content' style={{ textDecoration: todo.isChecked ? \"line-through\" : \"\" }}>\n                        <span data-testid=\"checkbox\" onClick={() => completeTodo(todo.id)}>\n                            {todo.isChecked ?\n                                <CheckSquare style = {{marginRight: \"5%\"}} />\n                                :\n                                <Square style = {{marginRight: \"5%\"}}/>\n                            }\n                        </span>\n                        {todo.content}\n                        </TodoText>\n                </div>\n                <div className=\"col-4 text-right\">\n                    <EditIcon onClick={() => editTodo(todo.id)} data-testid='edit-icon'><FontAwesomeIcon icon=\"pencil-alt\"/></EditIcon>\n                    <TrashIcon onClick={handleClick} data-testid='delete-todo'><Trash2/></TrashIcon>\n                </div>\n            </div>\n        </CardItem>\n    )\n};\n\nexport default TodoList","import React from 'react'\nimport styled from 'styled-components'\nimport TodoList from './TodoList'\n\nconst TDS = styled.div` \n    margin-bottom: 80px\n`;\n\nconst CTButton = styled.button`\n    // CTButton is ClearTodoButton\n    background: none;\n    padding: 5px 10px;\n    color: #f1a9a0;\n    float: right;\n    border: 1px solid #f1a9a0;\n    transition: 0.2s all\n    \n    &:hover,\n    &:active{\n        color: white;\n        background: red;\n        border-color: red\n    }\n`;\n\n\nconst TodoSection = ({todos, deleteTodo, clearTodos, completeTodo, editTodo}) => {\n\n    const handleClearTodos = async () => {\n        await window.navigator.vibrate(200);\n        let confirmClear = window.confirm(\"Are you sure you want to clear all todos?\");\n        if (!confirmClear) return;\n        clearTodos()\n    };\n\n    if (!todos || todos.length === 0) {\n        return(\n            <div  className={`text-center`} data-testid='empty-todo-container'>\n                <h4>No todos</h4>\n                <p>Use the form to add a new todo</p>\n            </div>\n        )\n    }\n\n    return(\n        <TDS data-testid='todo-section'>\n            {todos.map(todo => {\n                return <TodoList todo={todo} deleteTodo={deleteTodo} key={todo.id} editTodo={editTodo} id={todo.id} completeTodo={completeTodo}/>\n            })}\n            { (todos.length > 1) && <CTButton onClick={handleClearTodos}>Clear All Todos</CTButton> }\n        </TDS>\n    )\n};\n\nexport default TodoSection\n","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components'\n\nconst FormSection = styled.div`\n    display:flex;\n    align-items: center;\n    background: #eee;\n    height: auto;\n    padding: 30px 30px 65px 20px;\n`;\n\nconst Heading = styled.h5`\n    text-align: center;\n    font-weight: bold\n`;\n\nconst Input = styled.input`\n    padding: 6px;\n    border: none;\n    width: 100%;\n    margin: 20px auto;\n    \n    &::placeholder{opacity: 0.7; font-size: 0.9em}\n`;\n\n\n\nconst Button = styled.button`\n    background: ${props => props.isButtonActive ? '#000000' : 'gray'};\n    padding: 15px 32px;\n    color: white;\n    box-shadow: ${props => props.isButtonActive ? '3px 3px 10px 2px #aaa' : ''};\n    border: none;\n    transition: 0.16s all;\n    text-align: center;\n    text-decoration: none;\n    margin-left: 25%;\n    \n    \n    &:hover,\n    &:active{box-shadow: ${props => props.isButtonActive ? '3px 3px 10px 1px #aaa' : ''};\n    \n    &:active{box-shadow: none !important;}\n`\n\nconst AddTodoSection = ({addTodo, todoInputText, isEditingTodo, saveEdit}) => {\n\n   const [todoText, setTodoText] = useState('');\n    // todoInputText is passed from App.js down to components\n    // this was implemented when I decided to add feature of editing todos\n    // I needed a global state, as the editTodo function (which takes in the edited todo's text) is passed down to a sibling component\n\n    const [isButtonActive, setIsButtonActive] = useState(false);\n\n    const btnDisabled = isButtonActive ? false : true;\n    const btnText = !isEditingTodo ? 'Add New Todo' : 'Save Edit'\n\n    useEffect(() => {\n        if(todoText && todoText.length) {\n            setIsButtonActive(true)\n        } else{\n            setIsButtonActive(false)\n        }\n    }, [todoText]);\n\n    useEffect(() => {\n        setTodoText(todoInputText)\n    }, [todoInputText]);\n\n    const handleChange = (text) => {\n        setTodoText(text)\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (isEditingTodo){\n            saveEdit(todoText);\n            setTodoText('');\n            return\n        }\n        addTodo(todoText);\n        setTodoText('')\n    };\n\n\n    return(\n        <FormSection>\n           <div className=\"container\">\n               <Heading>Add Todos</Heading>\n               <form onSubmit={handleSubmit}>\n                   <Input type='text' placeholder='What have you got planned?' value={todoText} onChange={(e) => handleChange(e.target.value)}/>\n                   <Button data-testid='add-button' type='submit' disabled={btnDisabled} isButtonActive={isButtonActive} >{btnText}</Button>\n               </form>\n           </div>\n        </FormSection>\n    )\n};\n\nexport default AddTodoSection","import React from 'react';\nimport TodoSection from './TodoSection'\nimport AddTodoSection from './AddTodoSection'\n\n\nconst Main = ({\n                  todos,\n                  deleteTodo,\n                  addTodo,\n                  clearTodos,\n                  todoInputText,\n                  isEditingTodo,\n                  editTodo,\n                  completeTodo,\n                  saveEdit\n              }) => {\n    return (\n        <div className=\"container my-4\">\n            <div className=\"row mt-5\">\n                <div className=\"col-lg-7 col-sm-12\">\n                    <TodoSection todos={todos} deleteTodo={deleteTodo} clearTodos={clearTodos} editTodo={editTodo}\n                                 completeTodo={completeTodo}/>\n                </div>\n                <div className=\"col-lg-5 col-sm-12\">\n                    <AddTodoSection addTodo={addTodo} todoInputText={todoInputText} isEditingTodo={isEditingTodo}\n                                    saveEdit={saveEdit}/>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Main","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Info = styled.div`\r\n    background-color:background-color: #000000;\r\n    background-image: linear-gradient(147deg, #000000 0%, #04619f 74%);\r\n    // opacity:0.6;\r\n    color: white;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    width:100%\r\n    padding-block: 1rem;\r\n    \r\n`;\r\n\r\nconst Name = styled.h3`\r\n\r\n    opacity: 0.9\r\n    font-size: 1em;\r\n    height: 2em;\r\n    width: 10em;\r\n    margin-left: 180%;\r\n    font-weight: 300;\r\n    text-align: center;\r\n    \r\n`\r\nconst Pratham =styled.div`\r\n    \r\n    font-weight: bold;\r\n    font-size: 1em;\r\n`; \r\n\r\nconst Footer = () => {\r\n    return(\r\n        <footer data-testid=\"navbar\">\r\n            <Info>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <Name data-testid=\"logo-text\">App by <Pratham>Prathmesh Wavhal</Pratham></Name>\r\n                        </div>\r\n                        <div className=\"col-9\">\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Info>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer","import React, {useState, useEffect} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons'\n\nimport Header from './components/Header'\nimport Main from './components/Main'\nimport Footer from './components/Footer'\n\n// import { generateKeyPair } from \"crypto\";\n\nlibrary.add(faPencilAlt);\n\nconst App = () => {\n    const [todos, setTodos] = useState(null);\n    const [todoInputText, setTodoInputText] = useState('');\n    const [isEditingTodo, setIsEditingTodo] = useState(false);\n    const [todoBeingEdited, setTodoBeingEdited] = useState(null)\n\n\n  const deleteTodo = todoId => {\n    let newTodos = todos.filter(todo => todo.id !== todoId);\n    setTodos(newTodos);\n    localStorage.setItem(\"todos\", JSON.stringify(newTodos));\n  };\n\n  const addTodo = todo => {\n    let rand1 = Math.random()\n    let rand2 = Math.random()\n    let newTodo = {\n      id: rand1 + rand2,\n      content: `${todo[0].toUpperCase() + todo.slice(1, todo.length)}`,\n      isChecked: false\n    };\n    let newTodos = todos ? [...todos, newTodo] : [newTodo];\n    setTodos(newTodos);\n    localStorage.setItem(\"todos\", JSON.stringify(newTodos));\n  };\n\n  const clearTodos = () => {\n    localStorage.removeItem(\"todos\");\n    setTodos(null);\n  };\n\n  const completeTodo = todoId => {\n    setTodos(todos => {\n      let completedTodo = todos.filter(todo => todo.id === todoId)[0];\n      completedTodo.isChecked = !completedTodo.isChecked;\n      let newTodos = [...todos];\n      localStorage.setItem(\"todos\", JSON.stringify(newTodos));\n      return newTodos;\n    });\n  };\n\n\n    const saveEdit = (newTodoContent) => {\n        let indexOfEditedTodo = todos.indexOf(todoBeingEdited);\n        let newTodos = [...todos];\n        let newTodo = {\n            id: todoBeingEdited.id,\n            content: newTodoContent\n        };\n\n        if(indexOfEditedTodo !== -1) {\n            newTodos[indexOfEditedTodo] = newTodo\n        }\n        setTodos(newTodos);\n        localStorage.setItem('todos', JSON.stringify(newTodos));\n        setIsEditingTodo(false)\n    };\n\n    const editTodo = (editedTodoId) => {\n        setIsEditingTodo(true);\n        const todoToEdit = todos.find(todo => todo.id === editedTodoId);\n        setTodoInputText(todoToEdit.content);\n        setTodoBeingEdited(todoToEdit)\n    };\n\n    useEffect(() => {\n        document.title='Noted';\n        let todos = localStorage.getItem('todos');\n        todos = JSON.parse(todos);\n        setTodos(todos);\n    }, []);\n\n    return (\n        <>\n            <Header/>\n            <Main todos={todos}\n                  deleteTodo={deleteTodo}\n                  addTodo={addTodo}\n                  clearTodos={clearTodos}\n                  todoInputText={todoInputText}\n                  isEditingTodo={isEditingTodo}\n                  editTodo={editTodo}\n                  saveEdit={saveEdit}\n                  completeTodo={completeTodo}\n            />\n            <Footer />\n        </>\n    )\n\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}